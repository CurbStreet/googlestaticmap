var search_data = {"index":{"searchIndex":["googlestaticmap","googlestaticmaphelpertest","mockruby18object","mockruby19object","maplocation","mapmarker","mappath","mappolygon","get_map()","new()","new()","new()","new()","new()","relative_url()","to_s()","to_s()","to_s()","url()","history","readme","rakefile"],"longSearchIndex":["googlestaticmap","googlestaticmaphelpertest","googlestaticmaphelpertest::mockruby18object","googlestaticmaphelpertest::mockruby19object","maplocation","mapmarker","mappath","mappolygon","googlestaticmap#get_map()","googlestaticmap::new()","maplocation::new()","mapmarker::new()","mappath::new()","mappolygon::new()","googlestaticmap#relative_url()","maplocation#to_s()","mapmarker#to_s()","mappath#to_s()","googlestaticmap#url()","","",""],"info":[["GoogleStaticMap","","GoogleStaticMap.html","","<p>Main class for creating a static map.  Create an instance, Set attributes\nthat describe properties of …\n"],["GoogleStaticMapHelperTest","","GoogleStaticMapHelperTest.html","",""],["GoogleStaticMapHelperTest::MockRuby18Object","","GoogleStaticMapHelperTest/MockRuby18Object.html","",""],["GoogleStaticMapHelperTest::MockRuby19Object","","GoogleStaticMapHelperTest/MockRuby19Object.html","",""],["MapLocation","","MapLocation.html","","<p>Container class for a location on the map.  Set either a latitude and\nlongitude, or an address\n"],["MapMarker","","MapMarker.html","","<p>A single marker to place on the map.  Initialize and pass\n"],["MapPath","","MapPath.html","","<p>A path line to draw on the map.  Initialize and set attributes.\n"],["MapPolygon","","MapPolygon.html","","<p>A polygon to draw and fill on the map.  Has the same properties as a path\nwith the addition of a fill …\n"],["get_map","GoogleStaticMap","GoogleStaticMap.html#method-i-get_map","(output_file=nil, protocol='http')","<p>Connects to Google, retrieves the map, and returns the bytes for the image.\nOptionally, pass it an output …\n"],["new","GoogleStaticMap","GoogleStaticMap.html#method-c-new","(attrs={})","<p>Takes an optional hash of attributes\n"],["new","MapLocation","MapLocation.html#method-c-new","(attrs={})",""],["new","MapMarker","MapMarker.html#method-c-new","(attrs={})","<p>Takes an optional hash of attributes\n"],["new","MapPath","MapPath.html#method-c-new","(attrs={})","<p>Pass an optional hash of arguments\n"],["new","MapPolygon","MapPolygon.html#method-c-new","(attrs={})",""],["relative_url","GoogleStaticMap","GoogleStaticMap.html#method-i-relative_url","(protocol='http')","<p>Returns the URL to retrieve the map, relative to maps.google.com Example -\n“/maps/api/staticmap …\n"],["to_s","MapLocation","MapLocation.html#method-i-to_s","()",""],["to_s","MapMarker","MapMarker.html#method-i-to_s","()",""],["to_s","MapPath","MapPath.html#method-i-to_s","()",""],["url","GoogleStaticMap","GoogleStaticMap.html#method-i-url","(protocol='http')","<p>Returns the full URL to retrieve this static map.  You can use this as the\nsrc for an img to display …\n"],["History","","History_txt.html","","<p>1.1.2 / 2012-04-27\n<p>Fixed bug from 1.1.1 when specifying https when calling get_map (thanks\naduncan for …\n\n"],["README","","README.html","","<p>googlestaticmap gem\n<p>This gem is on Rubygems, simply type “gem install googlestaticmap” to\ninstall …\n"],["Rakefile","","Rakefile.html","","<p># It appears as if the state of unit testing gems through gem is in\nquestion, # so I’m just writing a …\n"]]}}